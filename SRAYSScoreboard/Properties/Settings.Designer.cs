﻿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRAYSScoreboard.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("COM5")]
        public string COMPort
        {
            get
            {
                return ((string)(this["COMPort"]));
            }
            set
            {
                this["COMPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color BackgroundColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["BackgroundColor"]));
            }
            set
            {
                this["BackgroundColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("HotTrack")]
        public global::System.Drawing.Color TextColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["TextColor"]));
            }
            set
            {
                this["TextColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("HotTrack")]
        public global::System.Drawing.Color HeaderLabelsColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["HeaderLabelsColor"]));
            }
            set
            {
                this["HeaderLabelsColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("HotTrack")]
        public global::System.Drawing.Color ColumnHeadersColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["ColumnHeadersColor"]));
            }
            set
            {
                this["ColumnHeadersColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightSteelBlue")]
        public global::System.Drawing.Color NameLabelsColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["NameLabelsColor"]));
            }
            set
            {
                this["NameLabelsColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightSteelBlue")]
        public global::System.Drawing.Color TimeLabelsColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["TimeLabelsColor"]));
            }
            set
            {
                this["TimeLabelsColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightSteelBlue")]
        public global::System.Drawing.Color PlaceLabelsColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["PlaceLabelsColor"]));
            }
            set
            {
                this["PlaceLabelsColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightSteelBlue")]
        public global::System.Drawing.Color LaneLabelsColor
        {
            get
            {
                return ((global::System.Drawing.Color)(this["LaneLabelsColor"]));
            }
            set
            {
                this["LaneLabelsColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int PoolLaneCount
        {
            get
            {
                return ((int)(this["PoolLaneCount"]));
            }
            set
            {
                this["PoolLaneCount"] = value;
            }
        }
    }
}
